{"version":3,"sources":["assets/img/remote.png","Global.js","Button.js","Form.js","App.js","reportWebVitals.js","index.js"],"names":["Global","serviceUrl","Button","params","useState","opacity","setOpacity","key","opening","bind","useDoubleTap","e","open","url","toast","info","fetch","then","resp","success","catch","error","src","remote","className","alt","style","Form","setKey","useLocation","setLocation","type","id","placeholder","onChange","target","value","onClick","localStorage","setItem","App","version","getItem","useEffect","console","log","component","path","to","newestOnTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAAe,MAA0B,mCCI1BA,G,MAJA,CACXC,WAAY,mC,6BCOD,SAASC,EAAT,GAA2B,IAAVC,EAAS,EAATA,OAE5B,EAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEOC,EAAOJ,EAAPI,IACHC,GAAU,EAERC,EAAOC,wBAAa,SAACC,GACvBC,OAGEA,EAAO,WACT,IAAIJ,EAAJ,CACAA,GAAU,EAEV,IAAMK,EAAG,UAAMb,EAAOC,WAAb,YAA2BM,GAGpCD,EAAW,IAEXQ,IAAMC,KAAK,sBAAuB,CAC9B,UAAa,MAEjBC,MAAMH,GACDI,MAAK,SAAAC,GACFJ,IAAMK,QAAQ,iBAAkB,CAC5B,UAAa,MAEjBX,GAAU,EACVF,EAAW,MAEdc,OAAM,SAAAC,GACHP,IAAMO,MAAM,2BAA4B,CACpC,UAAa,MAEjBb,GAAU,EACVF,EAAW,QAIvB,OACI,8BACI,iCACIgB,IAAKC,EACLC,UAAU,SACVC,IAAI,QACJC,MAAO,CAACrB,QAASA,IACbI,M,iBCnDL,SAASkB,IACpB,MAAgCvB,mBAAS,IAAzC,mBAAOG,EAAP,KAAYqB,EAAZ,KACA,EAAgCC,cAAhC,mBAAiBC,GAAjB,WAQA,OACI,sBAAKN,UAAU,OAAf,UACI,uBACIO,KAAK,OACLC,GAAG,MACHC,YAAY,kBACZC,SAAU,SAACvB,GAAD,OAAOiB,EAAOjB,EAAEwB,OAAOC,UAErC,uBACA,wBAAQJ,GAAG,WAAWK,QAfjB,WACJ9B,GAAe,KAARA,IACZ+B,aAAaC,QAAQ,MAAOhC,GAC5BuB,EAAY,WAAavB,KAYrB,uBCyBGiC,MAtCf,WACI,MAA8BpC,mBAAS,SAAvC,mBAAOqC,EAAP,KAEMlC,GAFN,KAEY+B,aAAaI,QAAQ,OAASJ,aAAaI,QAAQ,OAAS,MAGxE,EAAgCb,cAAhC,mBAAiBC,GAAjB,WAmBA,OAjBAa,qBAAU,WACNC,QAAQC,IAAI7C,EAAOC,YACnBe,MAAMhB,EAAOC,YACRgB,MAAK,SAAAC,GACFJ,IAAMK,QAAQ,qBAAsB,CAChC,UAAa,SAGpBC,OAAM,SAAAC,GACHP,IAAMO,MAAM,+BAGhBd,GACAuB,EAAY,WAAavB,KAE9B,IAGC,sBAAKiB,UAAU,MAAf,UACI,cAAC,IAAD,CAAOsB,UAAWnB,EAAMoB,KAAK,MAC7B,cAAC,IAAD,CAAOD,UAAW5C,EAAQ6C,KAAK,iBAC/B,uBAAK,uBACL,qBAAKvB,UAAU,UAAf,SACI,cAAC,IAAD,CAAMwB,GAAG,IAAT,SAAcP,MAElB,cAAC,IAAD,CAAgBQ,aAAW,QC/BxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.12cc6539.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/remote.7c35736d.png\";","const Global = {\n    serviceUrl: \"https://home.davidsantiago.net\"\n}\n\nexport default Global;\n","import React, {useState} from 'react';\nimport remote from './assets/img/remote.png'\nimport './Button.css';\nimport Global from './Global';\nimport {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {useDoubleTap} from \"use-double-tap\";\n\nexport default function Button({params}) {\n\n    const [opacity, setOpacity] = useState(1);\n\n    const {key} = params;\n    let opening = false;\n\n    const bind = useDoubleTap((e) => {\n        open();\n    });\n\n    const open = () => {\n        if (opening) return;\n        opening = true;\n\n        const url = `${Global.serviceUrl}/${key}`;\n        // const url = `${Global.serviceUrl}/hola`;\n\n        setOpacity(0.2);\n\n        toast.info(\"Abriendo puerta... \", {\n            'autoClose': 2000\n        });\n        fetch(url)\n            .then(resp => {\n                toast.success(\"Puerta abierta\", {\n                    'autoClose': 2000\n                });\n                opening = false;\n                setOpacity(1);\n            })\n            .catch(error => {\n                toast.error(\"Error abriendo la puerta\", {\n                    'autoClose': 2000\n                });\n                opening = false;\n                setOpacity(1);\n            })\n    }\n\n    return (\n        <div>\n            <img\n                src={remote}\n                className=\"button\"\n                alt=\"Abrir\"\n                style={{opacity: opacity}}\n                {...bind}\n            />\n        </div>\n    )\n}\n","import React, {useState} from 'react';\nimport {useLocation} from 'wouter';\nimport './Form.css';\n\nexport default function Form() {\n    const [key, setKey]           = useState('');\n    const [location, setLocation] = useLocation();\n\n    const send = () => {\n        if (!key || key === '') return;\n        localStorage.setItem('key', key);\n        setLocation('/button/' + key);\n    }\n\n    return (\n        <div className=\"form\">\n            <input\n                type=\"text\"\n                id=\"key\"\n                placeholder=\"Introduce llave\"\n                onChange={(e) => setKey(e.target.value)}\n            />\n            <br/>\n            <button id=\"btn-send\" onClick={send}>Enviar</button>\n        </div>\n    )\n}\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Button from \"./Button\";\nimport {Route, Link, useLocation} from 'wouter';\nimport Form from \"./Form\";\nimport {ToastContainer, toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Global from './Global';\n\n\nfunction App() {\n    const [version, setVersion] = useState('1.3.2')\n\n    const key = localStorage.getItem(\"key\") ? localStorage.getItem(\"key\") : null;\n\n\n    const [location, setLocation] = useLocation();\n\n    useEffect(() => {\n        console.log(Global.serviceUrl);\n        fetch(Global.serviceUrl)\n            .then(resp => {\n                toast.success(\"Servicio preparado\", {\n                    'autoClose': 2000\n                });\n            })\n            .catch(error => {\n                toast.error(\"Error de comunicaci√≥n\");\n            })\n\n        if (key) {\n            setLocation('/button/' + key);\n        }\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <Route component={Form} path=\"/\"/>\n            <Route component={Button} path=\"/button/:key\"/>\n            <br/><br/>\n            <div className=\"version\">\n                <Link to=\"/\">{version}</Link>\n            </div>\n            <ToastContainer newestOnTop/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}