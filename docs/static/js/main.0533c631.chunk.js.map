{"version":3,"sources":["assets/img/remote.png","Button.js","util.js","Form.js","App.js","reportWebVitals.js","index.js"],"names":["Button","useState","opacity","setOpacity","opening","setOpening","key","localStorage","getItem","user","useGeolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","coords","isGeolocationEnabled","useEffect","lat1","lon1","lat2","lon2","deg2rad","deg","Math","PI","dLat","dLon","a","sin","cos","atan2","sqrt","getDistanceFromLatLonInKm","Number","process","latitude","longitude","toast","warn","autoClose","open","info","axios","post","lng","lat","success","response","status","error","bind","useDoubleTap","src","remote","className","alt","style","Form","setKey","setUser","useLocation","setLocation","type","id","placeholder","onChange","e","target","value","onClick","setItem","App","version","console","log","get","then","catch","component","path","clear","newestOnTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAAe,MAA0B,mC,sDCU1B,SAASA,IAAU,IAAD,IAC/B,EAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAG,UAAGC,aAAaC,QAAQ,cAAxB,QAAkC,KACrCC,EAAI,UAAGF,aAAaC,QAAQ,eAAxB,QAAmC,KAI7C,EAAyCE,wBAAc,CACrDC,gBAAiB,CACfC,oBAAoB,GAEtBC,oBAAqB,MAJfC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,qBAOhBC,qBAAU,WACR,GAAID,GAAwBD,EAAQ,EC3BC,SAACG,EAAMC,EAAMC,EAAMC,GAC1D,IAAMC,EAAU,SAACC,GACf,OAAOA,GAAOC,KAAKC,GAAK,MAGpBC,EAAOJ,EAAQF,EAAOF,GACtBS,EAAOL,EAAQD,EAAOF,GACtBS,EACJJ,KAAKK,IAAIH,EAAO,GAAKF,KAAKK,IAAIH,EAAO,GACrCF,KAAKM,IAAIR,EAAQJ,IACfM,KAAKM,IAAIR,EAAQF,IACjBI,KAAKK,IAAIF,EAAO,GAChBH,KAAKK,IAAIF,EAAO,GAGpB,OAFU,EAAIH,KAAKO,MAAMP,KAAKQ,KAAKJ,GAAIJ,KAAKQ,KAAK,EAAIJ,IAT3C,MD2BWK,CACfC,OAHeC,qBAIfD,OALeC,sBAMfpB,EAAOqB,SACPrB,EAAOsB,WAGM,IACbC,IAAMC,KAAK,2DAAyD,CAClEC,UAAW,SAIhB,CAACzB,EAAQC,IAEZ,IAAMyB,EAAI,uCAAG,4BAAAb,EAAA,0DACPvB,EADO,wDAEXC,GAAW,GAEXF,EAAW,IAEXkC,IAAMI,KAAK,sBAAuB,CAChCF,UAAW,MAPF,kBAWHG,IAAMC,KAxCJT,oCAwCc,CACpB5B,IAAKA,EACLG,KAAMA,EACNmC,IAAG,OAAE9B,QAAF,IAAEA,OAAF,EAAEA,EAAQsB,UACbS,IAAG,OAAE/B,QAAF,IAAEA,OAAF,EAAEA,EAAQqB,WAfN,OAkBTE,IAAMS,QAAN,8CAAqDrC,GAAQ,CAC3D8B,UAAW,MAnBJ,kDAsBkB,OAAvB,eAAEQ,gBAAF,eAAYC,QACdX,IAAMY,MAAM,gBAAiB,CAC3BV,UAAW,MAGbF,IAAMY,MAAN,0CAA2C,CACzCV,UAAW,MA5BN,yBAgCTpC,EAAW,GACXE,GAAW,GAjCF,6EAAH,qDAqCJ6C,EAAOC,uBAAaX,GAE1B,OACE,8BACE,iCACEY,IAAKC,EACLC,UAAU,SACVC,IAAI,QACJC,MAAO,CAAEtD,QAASA,IACdgD,M,kBExFG,SAASO,IACtB,MAAsBxD,mBAAS,IAA/B,mBAAOK,EAAP,KAAYoD,EAAZ,KACA,EAAwBzD,mBAAS,IAAjC,mBAAOQ,EAAP,KAAakD,EAAb,KACA,EAAgCC,cAAhC,mBAAiBC,GAAjB,WAWA,OACE,sBAAKP,UAAU,OAAf,UACE,uBACEQ,KAAK,OACLC,GAAG,OACHC,YAAY,SACZC,SAAU,SAACC,GAAD,OAAOP,EAAQO,EAAEC,OAAOC,UAEpC,uBACA,uBACEN,KAAK,OACLC,GAAG,MACHC,YAAY,QACZC,SAAU,SAACC,GAAD,OAAOR,EAAOQ,EAAEC,OAAOC,UAEnC,uBACA,wBAAQL,GAAG,WAAWM,QAzBb,WACN/D,GAAe,KAARA,GAAeG,GAAiB,KAATA,IAEnCF,aAAa+D,QAAQ,MAAOhE,GAC5BC,aAAa+D,QAAQ,OAAQ7D,GAE7BoD,EAAY,aAmBV,uBC0BSU,MAnDf,WAAgB,IAAD,EACPC,EAAUtC,QAChBuC,QAAQC,IAAI,UAAWF,GAEvB,IAAMlE,EAAG,UAAGC,aAAaC,QAAQ,cAAxB,QAAkC,KAE3C,EAAgCoD,cAAhC,mBAAiBC,GAAjB,WA+BA,OA7BAY,QAAQC,IAAIxC,qCAEZlB,qBAAU,WACR0B,IACGiC,IAAIzC,qCACJ0C,MAAK,WACJvC,IAAMS,QAAQ,qBAAsB,CAClCP,UAAW,SAGdsC,OAAM,SAACX,GACN7B,IAAMY,MAAN,oCAAsCiB,GAAK,CACzC3B,UAAW,WAGhB,IAECjC,GACFuD,EAAY,WAYZ,sBAAKP,UAAU,MAAf,UACE,cAAC,IAAD,CAAOwB,UAAWrB,EAAMsB,KAAK,MAC7B,cAAC,IAAD,CAAOD,UAAW9E,EAAQ+E,KAAK,YAC/B,uBACA,uBACA,qBAAKzB,UAAU,UAAUe,QAdf,WACZ9D,aAAayE,QACb3C,IAAMS,QAAQ,0BAA2B,CACvCP,UAAW,MAEbsB,EAAY,MASV,SACGW,IAEH,cAAC,IAAD,CAAgBS,aAAW,QC3ClBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.0533c631.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/remote.7c35736d.png\";","import React, { useEffect, useState } from 'react';\nimport remote from './assets/img/remote.png';\nimport './Button.css';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useDoubleTap } from 'use-double-tap';\nimport axios from 'axios';\nimport { useGeolocated } from 'react-geolocated';\nimport { getDistanceFromLatLonInKm } from './util';\n\nexport default function Button() {\n  const [opacity, setOpacity] = useState(1);\n  const [opening, setOpening] = useState(false);\n\n  const key = localStorage.getItem('key') ?? null;\n  const user = localStorage.getItem('user') ?? null;\n\n  const url = process.env.REACT_APP_SERVICE_URL;\n\n  const { coords, isGeolocationEnabled } = useGeolocated({\n    positionOptions: {\n      enableHighAccuracy: false,\n    },\n    userDecisionTimeout: 10000,\n  });\n\n  useEffect(() => {\n    if (isGeolocationEnabled && coords) {\n      const home_lng = process.env.REACT_APP_HOME_LNG;\n      const home_lat = process.env.REACT_APP_HOME_LAT;\n\n      const distance = getDistanceFromLatLonInKm(\n        Number(home_lat),\n        Number(home_lng),\n        coords.latitude,\n        coords.longitude\n      );\n\n      if (distance > 0.5) {\n        toast.warn('Cuidado! estás alejado/a de casa para abrir la puerta', {\n          autoClose: 2000,\n        });\n      }\n    }\n  }, [coords, isGeolocationEnabled]);\n\n  const open = async () => {\n    if (opening) return;\n    setOpening(true);\n\n    setOpacity(0.2);\n\n    toast.info('Abriendo puerta... ', {\n      autoClose: 2000,\n    });\n\n    try {\n      await axios.post(url, {\n        key: key,\n        user: user,\n        lng: coords?.longitude,\n        lat: coords?.latitude,\n      });\n\n      toast.success(`Puerta abierta, bienvenido/a a casa ${user}`, {\n        autoClose: 2000,\n      });\n    } catch (e) {\n      if (e.response?.status === 401) {\n        toast.error('No autorizado', {\n          autoClose: 2000,\n        });\n      } else {\n        toast.error(`Error de comunicación: ${e}`, {\n          autoClose: 2000,\n        });\n      }\n    } finally {\n      setOpacity(1);\n      setOpening(false);\n    }\n  };\n\n  const bind = useDoubleTap(open);\n\n  return (\n    <div>\n      <img\n        src={remote}\n        className=\"button\"\n        alt=\"Abrir\"\n        style={{ opacity: opacity }}\n        {...bind}\n      />\n    </div>\n  );\n}\n","export const getDistanceFromLatLonInKm = (lat1, lon1, lat2, lon2) => {\n  const deg2rad = (deg) => {\n    return deg * (Math.PI / 180);\n  };\n  const R = 6371; // Radius of the earth in km\n  const dLat = deg2rad(lat2 - lat1); // deg2rad below\n  const dLon = deg2rad(lon2 - lon1);\n  const a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(deg2rad(lat1)) *\n      Math.cos(deg2rad(lat2)) *\n      Math.sin(dLon / 2) *\n      Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  const d = R * c; // Distance in km\n  return d;\n};\n","import React, { useState } from 'react';\nimport { useLocation } from 'wouter';\nimport './Form.css';\n\nexport default function Form() {\n  const [key, setKey] = useState('');\n  const [user, setUser] = useState('');\n  const [location, setLocation] = useLocation();\n\n  const send = () => {\n    if (!key || key === '' || !user || user === '') return;\n\n    localStorage.setItem('key', key);\n    localStorage.setItem('user', user);\n\n    setLocation('/button');\n  };\n\n  return (\n    <div className=\"form\">\n      <input\n        type=\"text\"\n        id=\"user\"\n        placeholder=\"Nombre\"\n        onChange={(e) => setUser(e.target.value)}\n      />\n      <br />\n      <input\n        type=\"text\"\n        id=\"key\"\n        placeholder=\"Llave\"\n        onChange={(e) => setKey(e.target.value)}\n      />\n      <br />\n      <button id=\"btn-send\" onClick={send}>\n        Enviar\n      </button>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport Button from './Button';\nimport { Route, useLocation } from 'wouter';\nimport Form from './Form';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios';\n\nfunction App() {\n  const version = process.env.REACT_APP_VERSION;\n  console.log('version', version);\n\n  const key = localStorage.getItem('key') ?? null;\n\n  const [location, setLocation] = useLocation();\n\n  console.log(process.env.REACT_APP_SERVICE_URL);\n\n  useEffect(() => {\n    axios\n      .get(process.env.REACT_APP_SERVICE_URL)\n      .then(() => {\n        toast.success('Servicio preparado', {\n          autoClose: 2000,\n        });\n      })\n      .catch((e) => {\n        toast.error(`Error de comunicación: ${e}`, {\n          autoClose: 2000,\n        });\n      });\n  }, []);\n\n  if (key) {\n    setLocation('/button');\n  }\n\n  const reset = () => {\n    localStorage.clear();\n    toast.success('Credenciales reseteadas', {\n      autoClose: 2000,\n    });\n    setLocation('/');\n  };\n\n  return (\n    <div className=\"App\">\n      <Route component={Form} path=\"/\" />\n      <Route component={Button} path=\"/button\" />\n      <br />\n      <br />\n      <div className=\"version\" onClick={reset}>\n        {version}\n      </div>\n      <ToastContainer newestOnTop />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}