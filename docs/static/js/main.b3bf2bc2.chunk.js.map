{"version":3,"sources":["assets/img/remote.png","Global.js","Button.js","Form.js","App.js","reportWebVitals.js","index.js"],"names":["Global","serviceUrl","Button","key","params","opening","src","remote","className","alt","onClick","url","toast","info","fetch","then","resp","success","catch","error","Form","useState","setKey","useLocation","setLocation","type","id","placeholder","onChange","e","target","value","localStorage","setItem","App","version","getItem","useEffect","console","log","component","path","to","newestOnTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAAe,G,MAAA,IAA0B,oCCI1BA,G,MAJA,CACXC,WAAY,mC,qBCMD,SAASC,EAAT,GAA2B,IAE/BC,EAF8B,EAATC,OAErBD,IACHE,GAAU,EAyBd,OACI,8BACI,qBACIC,IAAKC,EACLC,UAAU,SACVC,IAAI,QACJC,QA7BC,WACT,IAAIL,EAAJ,CACAA,GAAU,EAEV,IAAMM,EAAG,UAAMX,EAAOC,WAAb,YAA2BE,GACpCS,IAAMC,KAAK,sBAAuB,CAC9B,UAAa,MAEjBC,MAAMH,GACDI,MAAK,SAAAC,GACFJ,IAAMK,QAAQ,iBAAkB,CAC5B,UAAa,MAEjBZ,GAAU,KAEba,OAAM,SAAAC,GACHP,IAAMO,MAAM,2BAA4B,CACpC,UAAa,MAEjBd,GAAU,W,iBC3BX,SAASe,IACpB,MAAgCC,mBAAS,IAAzC,mBAAOlB,EAAP,KAAYmB,EAAZ,KACA,EAAgCC,cAAhC,mBAAiBC,GAAjB,WAQA,OACI,sBAAKhB,UAAU,OAAf,UACI,uBACIiB,KAAK,OACLC,GAAG,MACHC,YAAY,kBACZC,SAAU,SAACC,GAAD,OAAOP,EAAOO,EAAEC,OAAOC,UAErC,uBACA,wBAAQL,GAAG,WAAWhB,QAfjB,WACJP,GAAe,KAARA,IACZ6B,aAAaC,QAAQ,MAAO9B,GAC5BqB,EAAY,WAAarB,KAYrB,uBCyBG+B,MAtCf,WACI,MAA8Bb,mBAAS,SAAvC,mBAAOc,EAAP,KAEMhC,GAFN,KAEY6B,aAAaI,QAAQ,OAASJ,aAAaI,QAAQ,OAAS,MAGxE,EAAgCb,cAAhC,mBAAiBC,GAAjB,WAmBA,OAjBAa,qBAAU,WACNC,QAAQC,IAAIvC,EAAOC,YACnBa,MAAMd,EAAOC,YACRc,MAAK,SAAAC,GACFJ,IAAMK,QAAQ,qBAAsB,CAChC,UAAa,SAGpBC,OAAM,SAAAC,GACHP,IAAMO,MAAM,+BAGhBhB,GACAqB,EAAY,WAAarB,KAE9B,IAGC,sBAAKK,UAAU,MAAf,UACI,cAAC,IAAD,CAAOgC,UAAWpB,EAAMqB,KAAK,MAC7B,cAAC,IAAD,CAAOD,UAAWtC,EAAQuC,KAAK,iBAC/B,uBAAK,uBACL,qBAAKjC,UAAU,UAAf,SACI,cAAC,IAAD,CAAMkC,GAAG,IAAT,SAAcP,MAElB,cAAC,IAAD,CAAgBQ,aAAW,QC/BxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b3bf2bc2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/remote.7c35736d.png\";","const Global = {\n    serviceUrl: \"https://home.davidsantiago.net\"\n}\n\nexport default Global;\n","import React, {Component} from 'react';\nimport remote from './assets/img/remote.png'\nimport './Button.css';\nimport Global from './Global';\nimport {ToastContainer, toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function Button({params}) {\n\n    const {key} = params;\n    let opening = false;\n\n    const open = () => {\n        if (opening) return;\n        opening = true;\n\n        const url = `${Global.serviceUrl}/${key}`;\n        toast.info(\"Abriendo puerta... \", {\n            'autoClose': 2000\n        });\n        fetch(url)\n            .then(resp => {\n                toast.success(\"Puerta abierta\", {\n                    'autoClose': 2000\n                });\n                opening = false;\n            })\n            .catch(error => {\n                toast.error(\"Error abriendo la puerta\", {\n                    'autoClose': 2000\n                });\n                opening = false;\n            })\n    }\n\n    return (\n        <div>\n            <img\n                src={remote}\n                className=\"button\"\n                alt=\"Abrir\"\n                onClick={open}\n            />\n        </div>\n    )\n}\n","import React, {useState} from 'react';\nimport {useLocation} from 'wouter';\nimport './Form.css';\n\nexport default function Form() {\n    const [key, setKey]           = useState('');\n    const [location, setLocation] = useLocation();\n\n    const send = () => {\n        if (!key || key === '') return;\n        localStorage.setItem('key', key);\n        setLocation('/button/' + key);\n    }\n\n    return (\n        <div className=\"form\">\n            <input\n                type=\"text\"\n                id=\"key\"\n                placeholder=\"Introduce llave\"\n                onChange={(e) => setKey(e.target.value)}\n            />\n            <br/>\n            <button id=\"btn-send\" onClick={send}>Enviar</button>\n        </div>\n    )\n}\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Button from \"./Button\";\nimport {Route, Link, useLocation} from 'wouter';\nimport Form from \"./Form\";\nimport {ToastContainer, toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Global from './Global';\n\n\nfunction App() {\n    const [version, setVersion] = useState('1.3.1')\n\n    const key = localStorage.getItem(\"key\") ? localStorage.getItem(\"key\") : null;\n\n\n    const [location, setLocation] = useLocation();\n\n    useEffect(() => {\n        console.log(Global.serviceUrl);\n        fetch(Global.serviceUrl)\n            .then(resp => {\n                toast.success(\"Servicio preparado\", {\n                    'autoClose': 2000\n                });\n            })\n            .catch(error => {\n                toast.error(\"Error de comunicaci√≥n\");\n            })\n\n        if (key) {\n            setLocation('/button/' + key);\n        }\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <Route component={Form} path=\"/\"/>\n            <Route component={Button} path=\"/button/:key\"/>\n            <br/><br/>\n            <div className=\"version\">\n                <Link to=\"/\">{version}</Link>\n            </div>\n            <ToastContainer newestOnTop/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}